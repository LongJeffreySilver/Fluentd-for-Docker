<system>
  log_level debug
</system>

<source>
  @type systemd
  @id source_systemd
  path /var/log/journal
  <storage>
    @type local
    persistent true
    path /fluentd/log/fluentd-journal-pos.json
  </storage>
  tag systemd
</source>

<source>
  @type tail
  @id source_syslog
  path /var/log/syslog
  pos_file /fluentd/log/fluentd-syslog.pos
  tag syslog
  format syslog
</source>

#Exponer métricas en formato Prometheus mediante HTTP para que las scrapee el propio Prometheus. NO hace falta un "match" porque
#es el propio Prometheus el que se encarga de venir a buscarlas.
<source>
  @type prometheus
  @id source_prometheus
  # La dirección y puerto donde se expondrán las métricas.
  # Por defecto las métricas estarán disponibles en http://localhost:24231/metrics y se pueden ver si se mapea el puerto en el contenedor
  # aunque para el funcionamiento normal no es necesario.
  bind 0.0.0.0
  port 24231
</source>

#Metricas internas de Fluentd
<source>
  @type monitor_agent
  @id source_in_monitor_agent
  tag internal_metrics_fluentd
  bind 0.0.0.0
  port 24220
  emit_interval 20
</source>

<source>
  @type exec
  command /fluentd/scripts/health_metrics.py
  tag system.metrics
  run_interval 5
  #Parece que la versión moderna de exec ya no usa "format", si no "parse"
  <parse>
    @type json
  </parse>
</source>


# Como los datos vienen en formato string, hay que hacer un parseo a float, si no, prometheus no lo entiende.
<filter system.metrics>
  @type typecast
  types cpu_usage:float,memory_mb:float
</filter>

<filter internal_metrics_fluentd>
  @type typecast
  types buffer_queue_length:float,buffer_total_queued_size:float,retry_count:float
</filter>

# Mapear a Prometheus. 
# OJO: label_keys y labels_from_record van a nivel de <match>, no dentro de <metric>.
<match system.metrics>
  @type prometheus
  @id match_host_system_metrics_to_prometheus

  <metric>
    name system_cpu_usage
    type gauge
    desc CPU usage percentage
    key cpu_usage
  </metric>

  <metric>
    name system_memory_available_mb
    type gauge
    desc Memory available in MB
    key memory_mb
  </metric>
</match>

# Metricas internas de Fluentd
<match internal_metrics_fluentd>
  @type prometheus
  @id match_metric_agent_to_prometheus

  <metric>
    name fluentd_output_status_buffer_queue_length
    type gauge
    desc La longitud de la cola del buffer para las salidas
    key buffer_queue_length
  </metric>

  <metric>
    name fluentd_output_status_retry_count
    type counter
    desc Numero de reintentos de salida
    key retry_count
  </metric>

  <metric>
    name fluentd_buffer_total_queued_size
    type gauge
    desc Tamaño total en bytes de la cola
    key buffer_total_queued_size
  </metric>
</match>

# Se puede añadir otra fuente con in_tail apuntando a /var/lib/docker/containers/*/*.log y aplicar el filtro docker_metadata.

<match systemd>
  @type stdout
  @id match_systemd_to_stdout
</match>

<match syslog>
  @type stdout
  @id match_syslog_to_stdout
</match>

